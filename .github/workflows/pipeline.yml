name: pipeline

on:
  - push
  - pull_request

jobs:

  nix:
    name: nix-${{ matrix.os }}-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ghc:
          - ghc901
          - ghc8104
          - ghc884
          - ghc865
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: setup-nix
        uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/141b2b111d7aa5f8132edd0fc4f78fb2c2402ebb.tar.gz
          extra_nix_config: |
            substituters = https://cache.nixos.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: setup-cachix
        uses: cachix/cachix-action@v10
        with:
          name: asterius
          extraPullNames: niv
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

      - name: cachix-watch-store
        run: |
          cachix watch-store asterius &

      - name: test
        run: |
          nix-build --keep-going --no-out-link --argstr ghc ${{ matrix.ghc }} . -A wasmtime-hs

      - name: test-nix-shell
        run: |
          nix-shell --pure --keep-going --argstr ghc ${{ matrix.ghc }} --run "cabal v2-test --test-show-details always && (echo :q | cabal v2-repl)"

  windows-cargo-build:
    name: windows-cargo-build
    runs-on: windows-latest
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: checkout-wasmtime
        uses: actions/checkout@v2
        with:
          repository: bytecodealliance/wasmtime
          ref: 1770880e19a771d23715e2d1718cc8d08dbcff80
          path: wasmtime
          submodules: recursive

      - name: setup-rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-gnu
          default: true

      - name: cargo-cache
        uses: actions/cache@v2
        with:
          key: cargo-cache-${{ github.run_id }}
          restore-keys: cargo-cache-
          path: |
            ~/.cargo
            wasmtime/target

      - name: build-wasmtime-c-api
        run: |
          cd wasmtime
          cargo build --release --all-features --package wasmtime-c-api

  windows:
    name: windows-ghc-${{ matrix.ghc }}
    needs: windows-cargo-build
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - 9.0.1
          - 8.10.4
          - 8.8.4
          - 8.6.5
          - 8.4.4
          - 8.2.2
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: checkout-wasmtime
        uses: actions/checkout@v2
        with:
          repository: bytecodealliance/wasmtime
          ref: 1770880e19a771d23715e2d1718cc8d08dbcff80
          path: wasmtime
          submodules: recursive

      - name: setup-haskell
        id: setup-haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: cargo-cache
        uses: actions/cache@v2
        with:
          key: cargo-cache-${{ github.run_id }}
          restore-keys: cargo-cache-
          path: |
            ~/.cargo
            wasmtime/target

      - name: install-wasmtime-c-api
        run: |
          echo ${{ github.workspace }}/wasmtime/target/release >> $env:GITHUB_PATH

      - name: cabal-cache
        uses: actions/cache@v2
        with:
          key: cabal-cache-${{ matrix.ghc }}-${{ github.run_id }}
          restore-keys: cabal-cache-${{ matrix.ghc }}-
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle

      - name: test
        run: |
          C:\msys64\msys2_shell.cmd -mingw64 -defterm -full-path -here -no-start -c "cabal v2-test --extra-include-dirs '${{ github.workspace }}/wasmtime/crates/c-api/include' --extra-include-dirs '${{ github.workspace }}/wasmtime/crates/c-api/wasm-c-api/include' --extra-lib-dirs '${{ github.workspace }}/wasmtime/target/release' --test-show-details always"

  sdist-haddock:
    name: sdist-haddock
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: setup-nix
        uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/141b2b111d7aa5f8132edd0fc4f78fb2c2402ebb.tar.gz
          extra_nix_config: |
            substituters = https://cache.nixos.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: setup-cachix
        uses: cachix/cachix-action@v10
        with:
          name: asterius
          extraPullNames: niv
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

      - name: cachix-watch-store
        run: |
          cachix watch-store asterius &

      - name: sdist
        run: |
          nix-shell --pure --keep-going nix/hs4nix.nix --run "cabal v2-sdist"

      - name: sdist-artifact
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist-newstyle/sdist/*.tar.gz

      - name: haddock
        run: |
          nix-shell --pure --keep-going nix/hs4nix.nix --run "cabal v2-update && cabal v2-haddock --enable-documentation --haddock-for-hackage --haddock-hyperlink-source --haddock-quickjump wasmtime-hs"

      - name: haddock-artifact
        uses: actions/upload-artifact@v2
        with:
          name: haddock
          path: dist-newstyle/*-docs.tar.gz

      - name: documentation
        run: |
          DOCDIR=$(nix-shell --pure --keep-going nix/hs4nix.nix --run 'dirname $(cabal v2-haddock --enable-documentation --haddock-html-location "https://hackage.haskell.org/package/\$pkg-\$version/docs" --haddock-hyperlink-source --haddock-quickjump wasmtime-hs | tail -n1)')

          if [ ! -z "$NETLIFY_AUTH_TOKEN" ]
          then
            if [ $(git rev-parse --abbrev-ref HEAD) = "master" ]
            then
              nix-shell --pure --keep NETLIFY_AUTH_TOKEN --keep NETLIFY_SITE_ID --keep-going nix/hs4nix.nix --run "netlify deploy --dir $DOCDIR --message $GITHUB_REF-$GITHUB_SHA --prod"
            else
              nix-shell --pure --keep NETLIFY_AUTH_TOKEN --keep NETLIFY_SITE_ID --keep-going nix/hs4nix.nix --run "netlify deploy --dir $DOCDIR --message $GITHUB_REF-$GITHUB_SHA"
            fi
          fi
